#!/usr/bin/env bash

set -o pipefail


FUSE_VERSION=`node -p "require('./package.json').version"`

FUSE_URL=https://github.com/libfuse/libfuse/releases/download/fuse-$FUSE_VERSION/fuse-$FUSE_VERSION.tar.gz


TOOLCHAIN=`node -p "require('nodeos-cross-toolchain')"`

source $TOOLCHAIN/scripts/adjustEnvVars.sh || exit $?

PATH=$TOOLCHAIN/bin:$PATH


# Build cross-compiler (if needed)
(
  cd $TOOLCHAIN
  BITS=$BITS CPU=$CPU MACHINE=$MACHINE npm install --production || exit $?
) || exit $?


case $CPU in
  arm1176jzf-s|cortex-a7) NODE_ARCH=arm   ;;
  cortex-a53            ) NODE_ARCH=arm64 ;;
  i[345678]86           ) NODE_ARCH=ia32  ;;
  x86_64|nocona         ) NODE_ARCH=x64   ;;

  *)
    echo Unknown CPU "$CPU"
    exit 1
  ;;
esac

OS="`uname`"
case $OS in
  'Linux'    ) NODE_PLATFORM=linux   ;;
  'FreeBSD'  ) NODE_PLATFORM=freebsd ;;
  'WindowsNT') NODE_PLATFORM=win     ;;
  'Darwin'   ) NODE_PLATFORM=darwin  ;;
  'SunOS'    ) NODE_PLATFORM=solaris ;;
  'AIX'      ) NODE_PLATFORM=linux   ;;

  *)
    echo Unknown OS "$OS"
    exit 2
  ;;
esac


#
# Define steps paths
#

SRC_DIR=`pwd`/deps/fuse
OBJ_DIR=`pwd`/build/$CPU
OUT_DIR=`pwd`/out/$CPU
PREBUILD=`pwd`/prebuilds/$NODE_PLATFORM-$NODE_ARCH.tar.gz


#
# Download QEmu
#

STEP_DIR=$SRC_DIR

if [[ ! -d $STEP_DIR ]]; then
  mkdir -p $STEP_DIR || exit 10

  rmStep $OBJ_DIR

  curl -L $FUSE_URL | tar -xz --strip-components=1 -C $STEP_DIR || err 11
fi


#
# Build FUSE
#

STEP_DIR=$OBJ_DIR

if [[ ! -d $STEP_DIR ]]; then
  rmStep $OUT_DIR $PREBUILD

  (
    mkdir -p $STEP_DIR &&
    cd $STEP_DIR       || exit 20

    # Configure
#    CROSS_COMPILE="$TARGET-"  \
    MOUNT_FUSE_PATH=/bin  \
    CC=$TARGET-gcc        \
    CXX=$TARGET-g++       \
    $SRC_DIR/configure    \
        --silent          \
        --prefix=$OUT_DIR \
        --host=$TARGET    \
        --disable-example \
        --disable-static  \
        --disable-util    || exit 21

    # Compile
    make -j$JOBS &&
    make install || exit 22

    # Strip libraries
    $TARGET-strip $OUT_DIR/lib/*

    # Remove `share` folder
    rm -rf $OUT_DIR/share
  ) || err $?
fi


#
# Pack libfuse in a `node-gyp` compatible way
#

STEP_DIR=$PREBUILD

mkdir -p prebuilds                    &&
tar -cf - out/$CPU | gzip > $STEP_DIR || err 31
